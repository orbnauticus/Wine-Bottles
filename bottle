#!/bin/bash

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the following disclaimer
#   in the documentation and/or other materials provided with the
#   distribution.
# * Neither the name of the  nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


DEBUG=yes

debug () {
	[ "$DEBUG" == yes ] && echo "$@" >&2
	"$@"
}

BOTTLES="$HOME/.bottles"
WINEVERSIONS="$BOTTLES/.wineversions"

mkdir -p "$WINEVERSIONS"

NAME=bottle
VERSION=0.01
USAGE="$0 [cmd] [bottle] <args...>

	create         	Creates a new bottle
	list           	Show all bottles already created
	run            	Runs a command within the bottle
	script         	Prints the shell script used to run the bottle
	configure      	Runs winecfg in the bottle
	package        	Package a bottle for backup or distribution
	install-version	Downloads an older version of wine
	versions       	Lists versions of wine available for download
"

bottle.script() {
	source "$WINEPREFIX/bottle-settings"
	echo "#!/bin/bash"
	if [ -n "$WINEVERSION" ]; then
		echo "PATH=$WINEVERSIONS/$WINEVERSION/usr/bin/:\$PATH"
	fi
	echo export WINEPREFIX=\"$WINEPREFIX\"
	echo export WINEDEBUG=\"-all\"
	DIR="$(dirname "$(winepath -u "$EXE")")"
	echo cd \"$DIR\"
	echo wine \"$EXE\" \"\$@\"
}

bottle.config() {
	echo "#!/bin/bash"
	if [ -n "$WINEVERSION" ]; then
		echo "PATH=$WINEVERSIONS/$WINEVERSION/usr/bin/:\$PATH"
	fi
	echo export WINEPREFIX=\"$WINEPREFIX\"
	echo winecfg
}

bottle.create () {
	debug env WINEPREFIX="$WINEPREFIX" wineboot -u
}

bottle.versions () {
	debug wget -q -O- http://mulx.playonlinux.com/wine/linux-i386/LIST | cut -d';' -f2
}

depend_wine_version () {
	bottle.checkversion "$1" || bottle.installwine "$1"
}

bottle.checkversion () {
	[ -d "$WINEVERSIONS/$1" ]
}

bottle.installwine () {
	debug wget -q http://mulx.playonlinux.com/wine/linux-i386/PlayOnLinux-wine-$1.pol -O- | debug tar -xjP --exclude=files --exclude=playonlinux --transform "s|wineversion|$WINEVERSIONS|"
}

CMD="$1"
if [ -n "$2" ]; then
	WINEPREFIX="$BOTTLES/$2"
	source "$WINEPREFIX/bottle-settings"
fi
case "$CMD" in
	create)
		shift 2
		bottle.create "$@"
		;;
	run)
		shift 1
		depend_wine_version "$WINEVERSION"
		bottle.script "$@" | /bin/bash
		;;
	configure)
		shift 1
		bottle.config | /bin/bash
		;;
	list)
		ls "$BOTTLES"
		;;
	script)
		shift 1
		bottle.script "$@"
		;;
	versions)
		bottle.versions
		;;
	install-version)
		shift 1
		bottle.installwine "$@"
		;;
	-v|--version)
		echo "$NAME $VERSION"
		;;
	*)
		echo "$USAGE"
		exit 1
		;;
esac
